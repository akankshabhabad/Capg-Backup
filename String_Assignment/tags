!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/akanksha/String_Assignment/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e32548bc2/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
SIZE	include/hdr.h	/^#define SIZE /;"	d
main	String_Rev_Recursion.c	/^int main(void) $/;"	f	typeref:typename:int
main	count_occurances_17.c	/^int main() {$/;"	f	typeref:typename:int
main	src/main.c	/^int main(void)$/;"	f	typeref:typename:int
reverseString	String_Rev_Recursion.c	/^void reverseString(char *str , int len) $/;"	f	typeref:typename:void
strappend	src/str_append_4.c	/^char *strappend(char *dest , const char *src)$/;"	f	typeref:typename:char *
strcomp	src/str_comp_6.c	/^int strcomp(const char *s1 , const char *s2)$/;"	f	typeref:typename:int
strcompcase	src/str_compcase_7.c	/^int strcompcase(char *s1 , char *s2)$/;"	f	typeref:typename:int
strcopy	src/str_cpy_1.c	/^char* strcopy(char *dest , const char *src)$/;"	f	typeref:typename:char *
strindex	src/str_index_3.c	/^int strindex(char *str, char ch)$/;"	f	typeref:typename:int
strinschr	src/str_insertchar_15.c	/^char* strinschr(char *str , const char ch , int pos)$/;"	f	typeref:typename:char *
strnappend	src/str_nappend_5.c	/^char *strnappend(char *dest , const char *src , int n)$/;"	f	typeref:typename:char *
strncopy	src/str_ncopy_2.c	/^char* strncopy(char *dest , const char *src , int n)$/;"	f	typeref:typename:char *
strpalin	src/str_palin_10.c	/^int strpalin(char *str)$/;"	f	typeref:typename:int
strrev	src/str_rev_11.c	/^char* strrev(char *str)$/;"	f	typeref:typename:char *
strspan	src/str_span_8.c	/^int strspan(const char *s1 , const char *s2)$/;"	f	typeref:typename:int
strsqueeze	src/str_squeeze_12.c	/^char* strsqueeze(char *str)$/;"	f	typeref:typename:char *
strtoken	src/str_token_9.c	/^char* strtoken(char *str , const char *delim)$/;"	f	typeref:typename:char *
to_lower	src/to_lower_7.c	/^void to_lower(char *str)$/;"	f	typeref:typename:void
